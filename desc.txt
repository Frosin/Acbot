Логи json'ом на мой скрипт для логироваия.
redis https://github.com/go-redis/redis


Роли:
- активаторы
    получает сообщения для активации пользователей,
    активирует пользователей,
- пользователи
    пишет боту данные для активации, 
    получает сообщение (уведомление) об активации

Начальный экран:
- Приветствие, Сообщение "Выбирите роль при активации" - кнопки - инлайновые:
        "пользователь", 
        "активатор" 
    При любом выборе вызов метода регистрации нового пользователя у процесса-очереди


Рабочий экран - пользователь: сообщение "введите данные для активации", 
Рабочий экран - активатор: "ожидание запроса на активацию"


Опции:
- активаторы
    можно нажать кнопку "не получать сообщения для активации до завтра"
    (для тех кто не на работе, не будут приходить сообщения)

Процесс:
- сообщения для активации встают в очередь
- не активированные сообщения дублируются через определенное время
- когда пользователь пишет сообщение для активации оно пересылается всем активным активаторам
    (у активаторов появляются варианты на клавиатуре: "Я активирую" - всем активаторам отправляется активатор был назначен, при нажатии другими активаторами на кнопки по этому кейсу - всплывашка "активатор уже назначен" (назначается блокировка)
    -> После чего "Активировал" -> Пользователю отправившему запрос на активацию, всем активаторам  отправляется ответ "Пользователь активирован"
                   "Отказ" -> снятие блокировки, возврат на предыдущий этап, всем сообщение "Активатор отказался", дублируем всем активаторам кроме того, который отказался сообщение об активации

С отсылкой сообщений и обработкой работает отдельный процесс-бот

Очередь (через redis) используется как кэш с базой (mongoDB) работает процесс - обработчик очереди

При создании активации процесс-бот вызывает метод добавления активации в процессе-очереди
При получении сигнала о завершении активации - процесс-бот вызывает у процесса-очереди метод обновления активации
После завершения активации процесс-бот отправляет запрос на активную активацию в процесс-очередь (горутина с определенной периодичностью 5 сек и кладет в канал)



Сущности БД:
- users
    _id
    chat_id
    first_name
    last_name
    username
    role {user, activator}
    active
    deactive_time

- activation
    _id
    timestamp
    user {_id юзера из users}    
    activator {_id активатора из users, nil при создании}
    complete {true, false}
    retry {true, false} - была ли отправка повторная


Система вывода и отчетов
- вывод
- изменение полей (сделать через api запрос с ключом)